Box.test(res,20,type="Ljung")#p-value = 0.3925
Box.test(res^2,10,type="Ljung")#p-value = 0.01082
rm(list = ls())
## remove (almost) everything in the working environment.
setwd("C:/ling/teaching/teaching/MSBD5006MSDM5053/Lecture-8/R")  #set my working directory
data=read.csv("d-IBM.csv",header=T)[,7]
da=rev(data)
ibm=diff(log(da))*100
plot(ibm,xlab=" ",ylab=" ",main="Time plot of daily log returns for IBM stock",type="l",col="red",ylim=c(-28,15))
#employ the gjrGARCH/iGARCH/eGARCH model
library(rugarch)
spec1=ugarchspec(variance.model=list(model="gjrGARCH"),
mean.model=list(armaOrder=c(0,0),include.mean = FALSE) )
mm=ugarchfit(spec=spec1,data=ibm)
mm  ### see output
#plot(mm)
res=residuals(mm,standardize=T)
Box.test(res,10,type="Ljung")#p-value = 0.9611
Box.test(res,20,type="Ljung")#p-value = 0.3925
Box.test(res^2,10,type="Ljung")#p-value = 0.01082
data=read.csv("d-IBM.csv",header=T)[,7]
da=rev(data)
ibm=diff(log(da))*100
plot(ibm,xlab=" ",ylab=" ",main="Time plot of daily log returns for IBM stock",type="l",col="red",ylim=c(-28,15))
#employ the gjrGARCH/iGARCH/eGARCH model
library(rugarch)
spec1=ugarchspec(variance.model=list(model="gjrGARCH"),
mean.model=list(armaOrder=c(0,0),include.mean = FALSE) )
mm=ugarchfit(spec=spec1,data=ibm)
mm  ### see output
plot(mm)
rm(list = ls())
## remove (almost) everything in the working environment.
setwd("C:/ling/teaching/teaching/MSBD5006MSDM5053/Lecture-8/R")  #set my working directory
data=read.csv("d-IBM.csv",header=T)[,7]
da=rev(data)
ibm=diff(log(da))*100
plot(ibm,xlab=" ",ylab=" ",main="Time plot of daily log returns for IBM stock",type="l",col="red",ylim=c(-28,15))
#Fit a TAR model
#library(TSA)
#######################################################################################
#
#                Likelihood function
#
#######################################################################################
likfun=function(phi,data){
n=length(data)
y=data[3:n]
y2=data[2:(n-1)]
a=y-phi[1]-phi[2]*y2
h=numeric(n-2)
h[1]=a[1]^2
for (i in 2:(n-2)){
h[i]=(phi[3]+phi[4]*a[i-1]^2+phi[5]*h[i-1])*(a[i-1]<=0)
+(phi[6]+phi[7]*a[i-1]^2+phi[8]*h[i-1])*(a[i-1]>0)
}
loglik=sum(log(h)+a^2/h)
return(loglik)
}
#######################################################################################
#
#                Estimation when r is known
#
#######################################################################################
estknow=function(data){
initial=c(rep(0.01,8))
fit=optim(initial,likfun,data=data,method="L-BFGS-B",
lower=c(rep(-0.1,2),0.001,rep(0.001,2),0.001,rep(0.001,2)),upper=c(rep(0.1,2),0.1,rep(0.99,2),0.1,rep(0.99,2)))
estimator=fit$par
hatpar=c(estimator)
return(hatpar)
}
par1=estknow(ibm)
par1
#0.031112373 0.012055389 0.004556858 0.084215407 0.963739788 0.040816973 0.033767517 0.907109797
rm(list = ls())
## remove (almost) everything in the working environment.
setwd("C:/ling/teaching/teaching/MSBD5006MSDM5053/Lecture-8/R")  #set my working directory
data=read.csv("d-IBM.csv",header=T)[,7]
da=rev(data)
ibm=diff(log(da))*100
plot(ibm,xlab=" ",ylab=" ",main="Time plot of daily log returns for IBM stock",type="l",col="red",ylim=c(-28,15))
#Fit a TAR model
#library(TSA)
#######################################################################################
#
#                Likelihood function
#
#######################################################################################
likfun=function(phi,data){
n=length(data)
y=data[3:n]
y2=data[2:(n-1)]
a=y-phi[1]-phi[2]*y2
h=numeric(n-2)
h[1]=a[1]^2
for (i in 2:(n-2)){
h[i]=(phi[3]+phi[4]*a[i-1]^2+phi[5]*h[i-1])*(a[i-1]<=0)
+(phi[6]+phi[7]*a[i-1]^2+phi[8]*h[i-1])*(a[i-1]>0)
}
loglik=sum(log(h)+a^2/h)
return(loglik)
}
#######################################################################################
#
#                Estimation when r is known
#
#######################################################################################
estknow=function(data){
initial=c(rep(0.01,8))
fit=optim(initial,likfun,data=data,method="L-BFGS-B",
lower=c(rep(-0.1,2),0.001,rep(0.001,2),0.001,rep(0.001,2)),upper=c(rep(0.1,2),0.1,rep(0.99,2),0.1,rep(0.99,2)))
estimator=fit$par
hatpar=c(estimator)
return(hatpar)
}
par1=estknow(ibm)
par1
#0.031112373 0.012055389 0.004556858 0.084215407 0.963739788 0.040816973 0.033767517 0.907109797
rm(list = ls())
## remove (almost) everything in the working environment.
setwd("C:/ling/teaching/teaching/MSBD5006MSDM5053/Lecture-8/R")  #set my working directory
data=read.csv("d-IBM.csv",header=T)[,7]
da=rev(data)
ibm=diff(log(da))*100
plot(ibm,xlab=" ",ylab=" ",main="Time plot of daily log returns for IBM stock",type="l",col="red",ylim=c(-28,15))
#Fit a TAR model
#library(TSA)
#######################################################################################
#
#                Likelihood function
#
#######################################################################################
likfun=function(phi,data){
n=length(data)
y=data[3:n]
y2=data[2:(n-1)]
a=y-phi[1]-phi[2]*y2
h=numeric(n-2)
h[1]=a[1]^2
for (i in 2:(n-2)){
h[i]=(phi[3]+phi[4]*a[i-1]^2+phi[5]*h[i-1])*(a[i-1]<=0)
+(phi[6]+phi[7]*a[i-1]^2+phi[8]*h[i-1])*(a[i-1]>0)
}
loglik=sum(log(h)+a^2/h)
return(loglik)
}
#######################################################################################
#
#                Estimation when r is known
#
#######################################################################################
estknow=function(data){
initial=c(rep(0.01,8))
fit=optim(initial,likfun,data=data,method="L-BFGS-B",
lower=c(rep(-0.1,2),0.001,rep(0.001,2),0.001,rep(0.001,2)),upper=c(rep(0.1,2),0.1,rep(0.99,2),0.1,rep(0.99,2)))
estimator=fit$par
hatpar=c(estimator)
return(hatpar)
}
par1=estknow(ibm)
par1
#0.031112373 0.012055389 0.004556858 0.084215407 0.963739788 0.040816973 0.033767517 0.907109797
#residual
data=ibm
n=length(data)
y=data[3:n]
y2=data[2:(n-1)]
a=y-par1[1]-par1[2]*y2
h=numeric(n-2)
h[1]=a[1]^2
for (i in 2:(n-2)){
h[i]=(par1[3]+par1[4]*a[i-1]^2+par1[5]*h[i-1])*(a[i-1]<=0)+(par1[6]+par1[7]*a[i-1]^2+par1[8]*h[i-1])*(a[i-1]>0)
}
res=a/sqrt(h)
Box.test(res,10,type="Ljung")
Box.test(res^2,10,type="Ljung")
rm(list = ls())
## remove (almost) everything in the working environment.
setwd("C:/ling/teaching/teaching/MSBD5006MSDM5053/Lecture-8/R")  #set my working directory
data=read.csv("d-IBM.csv",header=T)[,7]
da=rev(data)
ibm=diff(log(da))*100
plot(ibm,xlab=" ",ylab=" ",main="Time plot of daily log returns for IBM stock",type="l",col="red",ylim=c(-28,15))
#Fit a TAR model
#library(TSA)
#######################################################################################
#
#                Likelihood function
#
#######################################################################################
likfun=function(phi,data){
n=length(data)
y=data[3:n]
y2=data[2:(n-1)]
a=y-phi[1]-phi[2]*y2
h=numeric(n-2)
h[1]=a[1]^2
for (i in 2:(n-2)){
h[i]=(phi[3]+phi[4]*a[i-1]^2+phi[5]*h[i-1])*(a[i-1]<=0)+(phi[6]+phi[7]*a[i-1]^2+phi[8]*h[i-1])*(a[i-1]>0)
}
loglik=sum(log(h)+a^2/h)
return(loglik)
}
#######################################################################################
#
#                Estimation when r is known
#
#######################################################################################
estknow=function(data){
initial=c(rep(0.01,8))
fit=optim(initial,likfun,data=data,method="L-BFGS-B",
lower=c(rep(-0.1,2),0.001,rep(0.001,2),0.001,rep(0.001,2)),upper=c(rep(0.1,2),0.1,rep(0.99,2),0.1,rep(0.99,2)))
estimator=fit$par
hatpar=c(estimator)
return(hatpar)
}
par1=estknow(ibm)
par1
#0.031112373 0.012055389 0.004556858 0.084215407 0.963739788 0.040816973 0.033767517 0.907109797
#residual
data=ibm
n=length(data)
y=data[3:n]
y2=data[2:(n-1)]
a=y-par1[1]-par1[2]*y2
h=numeric(n-2)
h[1]=a[1]^2
for (i in 2:(n-2)){
h[i]=(par1[3]+par1[4]*a[i-1]^2+par1[5]*h[i-1])*(a[i-1]<=0)+(par1[6]+par1[7]*a[i-1]^2+par1[8]*h[i-1])*(a[i-1]>0)
}
res=a/sqrt(h)
Box.test(res,10,type="Ljung")
Box.test(res^2,10,type="Ljung")
predict(m4,5)
rm(list = ls())
## remove (almost) everything in the working environment.
#textbook page123
setwd("C:/ling/teaching/teaching/MSBD5006MSDM5053/Lecture-7/R")  #set my working directory
#Purpose: build a simple ARCH model for the monthly log returns of Intel stock
da=read.table("m-intc7308.txt",header=T)[,2]
plot(da,type="l")
acf(da,20,main="",col="red",ylim=c(-0.2,1))
pacf(da,20,main="",col="red",ylim=c(-0.2,1))
Box.test(da,lag=12,type="Ljung")
at=da-mean(da)
acf(at^2,20,main="",col="red",ylim=c(-0.2,0.4))
Box.test(at^2,lag=12,type="Ljung")
#Choosing order
pacf(at^2,20,main="",col="red",ylim=c(-0.2,0.4))
library(fGarch) # Load the package
m0=garchFit(intc~garch(3,0),data=at,trace=F)
summary(m0) # Obtain results
##alpha2 and alpha3 appear to be statistically nonsignificant at 5% level.
m1=garchFit(intc~garch(1,0),data=at,trace=F)
summary(m1) # Obtain results
predict(m1,5) # Obtain 1 to 5-step predictions
# meanForecast meanError standardDeviation
#The following command fits an ARCH(1) model with skew Student-t dist.
# m3=garchFit(intc~garch(1,0),data=intc,cond.dist="sstd",trace=F)
# summary(m3)
# The following command fits a GARCH(1,1) model
m4=garchFit(intc~garch(1,1),data=at,trace=F)
summary(m4) # output edited.
predict(m4,5)
rm(list = ls())
## remove (almost) everything in the working environment.
#textbook page123
setwd("C:/ling/teaching/teaching/MSBD5006MSDM5053/Lecture-7/R")  #set my working directory
#########Example3.3 page134
#library(fGarch)
sp5=scan(file="sp500.txt") # Load data
plot(sp5,type="l")
acf(sp5,20,main="",col="red",ylim=c(-1,1))
pacf(sp5,20,main="",col="red",ylim=c(-1,1))
Box.test(sp5,lag=12,type="Ljung")
acf(sp5^2,20,main="",col="red",ylim=c(-1,1))
pacf(sp5^2,20,main="",col="red",ylim=c(-1,1))
Box.test(sp5^2,lag=12,type="Ljung")
# Fit an MA(3)+GARCH(1,1) model.
m1=garchFit(~arma(0,3)+garch(1,1),data=sp5,trace=F)
summary(m1)
# Below, fit an AR(3)+GARCH(1,1) model.
m1=garchFit(~arma(3,0)+garch(1,1),data=sp5,trace=F)
summary(m1)
m2=garchFit(~garch(1,1),data=sp5,trace=F)
summary(m2)
# Below, fit a GARCH(1,1) model with Student-t distribution.
#m2=garchFit(~garch(1,1),data=sp5,trace=F,cond.dist="std")
#Obtain standardized residuals.
stresi=residuals(m2,standardize=T)
plot(stresi,type="l")
Box.test(stresi,10,type="Ljung")
Box.test(stresi^2,10,type="Ljung")
predict(m2,5)
rm(list = ls())
## remove (almost) everything in the working environment.
#textbook page123
setwd("C:/ling/teaching/teaching/MSBD5006MSDM5053/Lecture-7/R")  #set my working directory
#########Example3.3 page134
#library(fGarch)
sp5=scan(file="sp500.txt") # Load data
plot(sp5,type="l")
acf(sp5,20,main="",col="red",ylim=c(-1,1))
pacf(sp5,20,main="",col="red",ylim=c(-1,1))
Box.test(sp5,lag=12,type="Ljung")
acf(sp5^2,20,main="",col="red",ylim=c(-1,1))
pacf(sp5^2,20,main="",col="red",ylim=c(-1,1))
Box.test(sp5^2,lag=12,type="Ljung")
# Fit an MA(3)+GARCH(1,1) model.
m1=garchFit(~arma(0,3)+garch(1,1),data=sp5,trace=F)
summary(m1)
predict(m1,5)
rm(list = ls())
## remove (almost) everything in the working environment.
#textbook page123
setwd("C:/ling/teaching/teaching/MSBD5006MSDM5053/Lecture-7/R")  #set my working directory
#########Example3.3 page134
#library(fGarch)
sp5=scan(file="sp500.txt") # Load data
plot(sp5,type="l")
acf(sp5,20,main="",col="red",ylim=c(-1,1))
pacf(sp5,20,main="",col="red",ylim=c(-1,1))
Box.test(sp5,lag=12,type="Ljung")
acf(sp5^2,20,main="",col="red",ylim=c(-1,1))
pacf(sp5^2,20,main="",col="red",ylim=c(-1,1))
Box.test(sp5^2,lag=12,type="Ljung")
# Fit an MA(3)+GARCH(1,1) model.
m1=garchFit(~arma(0,3)+garch(1,1),data=sp5,trace=F)
summary(m1)
predict(m1,5, mse = c("cond","uncond"))
rm(list = ls())
## remove (almost) everything in the working environment.
#textbook page123
setwd("C:/ling/teaching/teaching/MSBD5006MSDM5053/Lecture-7/R")  #set my working directory
#########Example3.3 page134
#library(fGarch)
sp5=scan(file="sp500.txt") # Load data
plot(sp5,type="l")
acf(sp5,20,main="",col="red",ylim=c(-1,1))
pacf(sp5,20,main="",col="red",ylim=c(-1,1))
Box.test(sp5,lag=12,type="Ljung")
acf(sp5^2,20,main="",col="red",ylim=c(-1,1))
pacf(sp5^2,20,main="",col="red",ylim=c(-1,1))
Box.test(sp5^2,lag=12,type="Ljung")
# Fit an MA(3)+GARCH(1,1) model.
m1=garchFit(~arma(0,3)+garch(1,1),data=sp5,trace=F)
summary(m1)
predict(m1,5, mse = c("cond","uncond"))
predict(m1, n.ahead = 10, trace = FALSE, mse = c("cond","uncond"),
plot=FALSE, nx=NULL, crit_val=NULL, conf=NULL, ...)
m1=garchFit(~arma(0,3)+garch(1,1),data=sp5,trace=F)
summary(m1)
predict(m1,5, mse = c("cond","uncond"))
predict(m1, n.ahead = 10, trace = FALSE, mse = c("cond","uncond"),
plot=FALSE, nx=NULL, crit_val=NULL, conf=NULL)
m1=garchFit(~arma(0,3)+garch(1,1),data=sp5,trace=F)
summary(m1)
predict(m1,5, mse = c("cond","uncond"))
predict(m1, n.ahead = 10, trace = FALSE, mse = c("cond","uncond"),
plot=FALSE, nx=NULL, crit_val=NULL, conf=NULL)
# Fit an MA(3)+GARCH(1,1) model.
m1=garchFit(~arma(0,3)+garch(1,1),data=sp5,trace=F)
summary(m1)
predict(m1,5, mse = c("cond","uncond"))
predict(m1, n.ahead = 10, trace = FALSE, mse = c("cond","uncond"),
plot=TRUE, nx=NULL, crit_val=NULL, conf=NULL)
# Below, fit an AR(3)+GARCH(1,1) model.
m1=garchFit(~arma(3,0)+garch(1,1),data=sp5,trace=F)
summary(m1)
m2=garchFit(~garch(1,1),data=sp5,trace=F)
summary(m2)
# Below, fit a GARCH(1,1) model with Student-t distribution.
#m2=garchFit(~garch(1,1),data=sp5,trace=F,cond.dist="std")
#Obtain standardized residuals.
stresi=residuals(m2,standardize=T)
plot(stresi,type="l")
Box.test(stresi,10,type="Ljung")
Box.test(stresi^2,10,type="Ljung")
predict(m2, n.ahead = 10, trace = FALSE, mse = c("cond","uncond"),
plot=TRUE, nx=NULL, crit_val=NULL, conf=NULL)
rm(list = ls())
## remove (almost) everything in the working environment.
#textbook page123
setwd("C:/ling/teaching/teaching/MSBD5006MSDM5053/Lecture-7/R")  #set my working directory
#Purpose: build a simple ARCH model for the monthly log returns of Intel stock
da=read.table("m-intc7308.txt",header=T)[,2]
plot(da,type="l")
acf(da,20,main="",col="red",ylim=c(-0.2,1))
pacf(da,20,main="",col="red",ylim=c(-0.2,1))
Box.test(da,lag=12,type="Ljung")
at=da-mean(da)
acf(at^2,20,main="",col="red",ylim=c(-0.2,0.4))
Box.test(at^2,lag=12,type="Ljung")
#Choosing order
pacf(at^2,20,main="",col="red",ylim=c(-0.2,0.4))
library(fGarch) # Load the package
m0=garchFit(intc~garch(3,0),data=at,trace=F)
summary(m0) # Obtain results
##alpha2 and alpha3 appear to be statistically nonsignificant at 5% level.
m1=garchFit(intc~garch(1,0),data=at,trace=F)
summary(m1) # Obtain results
predict(m1,5) # Obtain 1 to 5-step predictions
# meanForecast meanError standardDeviation
#The following command fits an ARCH(1) model with Student-t dist.
m2=garchFit(intc~garch(3,0),data=at,trace=F,cond.dist="std")
summary(m2) # Output shortened.
#The following command fits an ARCH(1) model with skew Student-t dist.
# m3=garchFit(intc~garch(1,0),data=intc,cond.dist="sstd",trace=F)
# summary(m3)
# The following command fits a GARCH(1,1) model
m4=garchFit(intc~garch(1,1),data=at,trace=F)
summary(m4) # output edited.
#Next, fit an ARMA(1,0)+GARCH(1,1) model with Gaussian noises.
m5=garchFit(intc~arma(1,0)+garch(1,1),data=da,trace=F)
summary(m5)
stresi=residuals(m5,standardize=T)
plot(stresi,xlab=" ",ylab=" ",main="Time plot of daily log returns for IBM stock",type="l",col="red",ylim=c(-15,15))
Box.test(stresi,10,type="Ljung")
predict(m5, n.ahead = 10, trace = FALSE, mse = c("cond","uncond"),
plot=TRUE, nx=NULL, crit_val=NULL, conf=NULL)
source('C:/ling/teaching/teaching/MSBD5006MSDM5053/Lecture-7/R/ARCH-intel.R')
rm(list = ls())
## remove (almost) everything in the working environment.
setwd("C:/ling/teaching/teaching/MSBD5006MSDM5053/Lecture-8/R")  #set my working directory
data=read.csv("d-IBM.csv",header=T)[,7]
da=rev(data)
ibm=diff(log(da))*100
plot(ibm,xlab=" ",ylab=" ",main="Time plot of daily log returns for IBM stock",type="l",col="red",ylim=c(-28,15))
Box.test(ibm,10,type="Ljung")
library(fGarch)
m=garchFit(ibm~arma(0,0)+garch(1,1),data=ibm,trace=F)
summary(m)
#Obtain standardized residuals.
stresi=residuals(m,standardize=T)
plot(stresi,xlab=" ",ylab=" ",main="Time plot of daily log returns for IBM stock",type="l",col="red",ylim=c(-15,15))
Box.test(stresi,10,type="Ljung")
Box.test(stresi,20,type="Ljung")
Box.test(stresi^2,10,type="Ljung")
Box.test(stresi^2,20,type="Ljung")
#The unconditional mean of the model: 0.061196
#sample mean: 0.0378514
mean(ibm)
#indicating that the model might be misspecified
predict(m, n.ahead = 10, trace = FALSE, mse = c("cond","uncond"),
plot=TRUE, nx=NULL, crit_val=NULL, conf=NULL)
predict(m, n.ahead = 100, trace = FALSE, mse = c("cond","uncond"),
plot=TRUE, nx=NULL, crit_val=NULL, conf=NULL)
m2=garchFit(~garch(1,1),data=sp5,trace=F)
summary(m2)
# Below, fit a GARCH(1,1) model with Student-t distribution.
#m2=garchFit(~garch(1,1),data=sp5,trace=F,cond.dist="std")
#Obtain standardized residuals.
stresi=residuals(m2,standardize=T)
plot(stresi,type="l")
Box.test(stresi,10,type="Ljung")
Box.test(stresi^2,10,type="Ljung")
predict(m2, n.ahead = 10, trace = FALSE, mse = c("cond","uncond"),
plot=TRUE, nx=NULL, crit_val=NULL, conf=NULL)
rm(list = ls())
## remove (almost) everything in the working environment.
#textbook page123
setwd("C:/ling/teaching/teaching/MSBD5006MSDM5053/Lecture-7/R")  #set my working directory
#########Example3.3 page134
#library(fGarch)
sp5=scan(file="sp500.txt") # Load data
plot(sp5,type="l")
acf(sp5,20,main="",col="red",ylim=c(-1,1))
pacf(sp5,20,main="",col="red",ylim=c(-1,1))
Box.test(sp5,lag=12,type="Ljung")
acf(sp5^2,20,main="",col="red",ylim=c(-1,1))
pacf(sp5^2,20,main="",col="red",ylim=c(-1,1))
Box.test(sp5^2,lag=12,type="Ljung")
# Fit an MA(3)+GARCH(1,1) model.
m1=garchFit(~arma(0,3)+garch(1,1),data=sp5,trace=F)
summary(m1)
predict(m1, n.ahead = 10, trace = FALSE, mse = c("cond","uncond"),
plot=TRUE, nx=NULL, crit_val=NULL, conf=NULL)
# Below, fit an AR(3)+GARCH(1,1) model.
m1=garchFit(~arma(3,0)+garch(1,1),data=sp5,trace=F)
summary(m1)
m2=garchFit(~garch(1,1),data=sp5,trace=F)
summary(m2)
# Below, fit a GARCH(1,1) model with Student-t distribution.
#m2=garchFit(~garch(1,1),data=sp5,trace=F,cond.dist="std")
#Obtain standardized residuals.
stresi=residuals(m2,standardize=T)
plot(stresi,type="l")
Box.test(stresi,10,type="Ljung")
Box.test(stresi^2,10,type="Ljung")
predict(m2, n.ahead = 10, trace = FALSE, mse = c("cond","uncond"),
plot=TRUE, nx=NULL, crit_val=NULL, conf=NULL)
rm(list = ls())
## remove (almost) everything in the working environment.
setwd("C:/ling/teaching/teaching/MSBD5006MSDM5053/Lecture-8/R")  #set my working directory
data=read.csv("d-IBM.csv",header=T)[,7]
da=rev(data)
ibm=diff(log(da))*100
plot(ibm,xlab=" ",ylab=" ",main="Time plot of daily log returns for IBM stock",type="l",col="red",ylim=c(-28,15))
#employ the gjrGARCH/iGARCH/eGARCH model
library(rugarch)
spec1=ugarchspec(variance.model=list(model="gjrGARCH"),
mean.model=list(armaOrder=c(0,0),include.mean = FALSE) )
mm=ugarchfit(spec=spec1,data=ibm)
mm  ### see output
#plot(mm)
res=residuals(mm,standardize=T)
Box.test(res,10,type="Ljung")#p-value = 0.9611
Box.test(res,20,type="Ljung")#p-value = 0.3925
Box.test(res^2,10,type="Ljung")#p-value = 0.01082
predict(mm, n.ahead = 10, trace = FALSE, mse = c("cond","uncond"),
plot=TRUE, nx=NULL, crit_val=NULL, conf=NULL)
