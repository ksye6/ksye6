#The following command fits an ARCH(1) model with skew Student-t dist.
# m3=garchFit(intc~garch(1,0),data=intc,cond.dist="sstd",trace=F)
# summary(m3)
# The following command fits a GARCH(1,1) model
m4=garchFit(intc~garch(1,1),data=at,trace=F)
summary(m4) # output edited.
predict(m4,5)
rm(list = ls())
## remove (almost) everything in the working environment.
#textbook page123
setwd("C:/ling/teaching/teaching/MSBD5006MSDM5053/Lecture-7/R")  #set my working directory
#########Example3.3 page134
#library(fGarch)
sp5=scan(file="sp500.txt") # Load data
plot(sp5,type="l")
acf(sp5,20,main="",col="red",ylim=c(-1,1))
pacf(sp5,20,main="",col="red",ylim=c(-1,1))
Box.test(sp5,lag=12,type="Ljung")
acf(sp5^2,20,main="",col="red",ylim=c(-1,1))
pacf(sp5^2,20,main="",col="red",ylim=c(-1,1))
Box.test(sp5^2,lag=12,type="Ljung")
# Fit an MA(3)+GARCH(1,1) model.
m1=garchFit(~arma(0,3)+garch(1,1),data=sp5,trace=F)
summary(m1)
# Below, fit an AR(3)+GARCH(1,1) model.
m1=garchFit(~arma(3,0)+garch(1,1),data=sp5,trace=F)
summary(m1)
m2=garchFit(~garch(1,1),data=sp5,trace=F)
summary(m2)
# Below, fit a GARCH(1,1) model with Student-t distribution.
#m2=garchFit(~garch(1,1),data=sp5,trace=F,cond.dist="std")
#Obtain standardized residuals.
stresi=residuals(m2,standardize=T)
plot(stresi,type="l")
Box.test(stresi,10,type="Ljung")
Box.test(stresi^2,10,type="Ljung")
predict(m2,5)
rm(list = ls())
## remove (almost) everything in the working environment.
#textbook page123
setwd("C:/ling/teaching/teaching/MSBD5006MSDM5053/Lecture-7/R")  #set my working directory
#########Example3.3 page134
#library(fGarch)
sp5=scan(file="sp500.txt") # Load data
plot(sp5,type="l")
acf(sp5,20,main="",col="red",ylim=c(-1,1))
pacf(sp5,20,main="",col="red",ylim=c(-1,1))
Box.test(sp5,lag=12,type="Ljung")
acf(sp5^2,20,main="",col="red",ylim=c(-1,1))
pacf(sp5^2,20,main="",col="red",ylim=c(-1,1))
Box.test(sp5^2,lag=12,type="Ljung")
# Fit an MA(3)+GARCH(1,1) model.
m1=garchFit(~arma(0,3)+garch(1,1),data=sp5,trace=F)
summary(m1)
predict(m1,5)
rm(list = ls())
## remove (almost) everything in the working environment.
#textbook page123
setwd("C:/ling/teaching/teaching/MSBD5006MSDM5053/Lecture-7/R")  #set my working directory
#########Example3.3 page134
#library(fGarch)
sp5=scan(file="sp500.txt") # Load data
plot(sp5,type="l")
acf(sp5,20,main="",col="red",ylim=c(-1,1))
pacf(sp5,20,main="",col="red",ylim=c(-1,1))
Box.test(sp5,lag=12,type="Ljung")
acf(sp5^2,20,main="",col="red",ylim=c(-1,1))
pacf(sp5^2,20,main="",col="red",ylim=c(-1,1))
Box.test(sp5^2,lag=12,type="Ljung")
# Fit an MA(3)+GARCH(1,1) model.
m1=garchFit(~arma(0,3)+garch(1,1),data=sp5,trace=F)
summary(m1)
predict(m1,5, mse = c("cond","uncond"))
rm(list = ls())
## remove (almost) everything in the working environment.
#textbook page123
setwd("C:/ling/teaching/teaching/MSBD5006MSDM5053/Lecture-7/R")  #set my working directory
#########Example3.3 page134
#library(fGarch)
sp5=scan(file="sp500.txt") # Load data
plot(sp5,type="l")
acf(sp5,20,main="",col="red",ylim=c(-1,1))
pacf(sp5,20,main="",col="red",ylim=c(-1,1))
Box.test(sp5,lag=12,type="Ljung")
acf(sp5^2,20,main="",col="red",ylim=c(-1,1))
pacf(sp5^2,20,main="",col="red",ylim=c(-1,1))
Box.test(sp5^2,lag=12,type="Ljung")
# Fit an MA(3)+GARCH(1,1) model.
m1=garchFit(~arma(0,3)+garch(1,1),data=sp5,trace=F)
summary(m1)
predict(m1,5, mse = c("cond","uncond"))
predict(m1, n.ahead = 10, trace = FALSE, mse = c("cond","uncond"),
plot=FALSE, nx=NULL, crit_val=NULL, conf=NULL, ...)
m1=garchFit(~arma(0,3)+garch(1,1),data=sp5,trace=F)
summary(m1)
predict(m1,5, mse = c("cond","uncond"))
predict(m1, n.ahead = 10, trace = FALSE, mse = c("cond","uncond"),
plot=FALSE, nx=NULL, crit_val=NULL, conf=NULL)
m1=garchFit(~arma(0,3)+garch(1,1),data=sp5,trace=F)
summary(m1)
predict(m1,5, mse = c("cond","uncond"))
predict(m1, n.ahead = 10, trace = FALSE, mse = c("cond","uncond"),
plot=FALSE, nx=NULL, crit_val=NULL, conf=NULL)
# Fit an MA(3)+GARCH(1,1) model.
m1=garchFit(~arma(0,3)+garch(1,1),data=sp5,trace=F)
summary(m1)
predict(m1,5, mse = c("cond","uncond"))
predict(m1, n.ahead = 10, trace = FALSE, mse = c("cond","uncond"),
plot=TRUE, nx=NULL, crit_val=NULL, conf=NULL)
# Below, fit an AR(3)+GARCH(1,1) model.
m1=garchFit(~arma(3,0)+garch(1,1),data=sp5,trace=F)
summary(m1)
m2=garchFit(~garch(1,1),data=sp5,trace=F)
summary(m2)
# Below, fit a GARCH(1,1) model with Student-t distribution.
#m2=garchFit(~garch(1,1),data=sp5,trace=F,cond.dist="std")
#Obtain standardized residuals.
stresi=residuals(m2,standardize=T)
plot(stresi,type="l")
Box.test(stresi,10,type="Ljung")
Box.test(stresi^2,10,type="Ljung")
predict(m2, n.ahead = 10, trace = FALSE, mse = c("cond","uncond"),
plot=TRUE, nx=NULL, crit_val=NULL, conf=NULL)
rm(list = ls())
## remove (almost) everything in the working environment.
#textbook page123
setwd("C:/ling/teaching/teaching/MSBD5006MSDM5053/Lecture-7/R")  #set my working directory
#Purpose: build a simple ARCH model for the monthly log returns of Intel stock
da=read.table("m-intc7308.txt",header=T)[,2]
plot(da,type="l")
acf(da,20,main="",col="red",ylim=c(-0.2,1))
pacf(da,20,main="",col="red",ylim=c(-0.2,1))
Box.test(da,lag=12,type="Ljung")
at=da-mean(da)
acf(at^2,20,main="",col="red",ylim=c(-0.2,0.4))
Box.test(at^2,lag=12,type="Ljung")
#Choosing order
pacf(at^2,20,main="",col="red",ylim=c(-0.2,0.4))
library(fGarch) # Load the package
m0=garchFit(intc~garch(3,0),data=at,trace=F)
summary(m0) # Obtain results
##alpha2 and alpha3 appear to be statistically nonsignificant at 5% level.
m1=garchFit(intc~garch(1,0),data=at,trace=F)
summary(m1) # Obtain results
predict(m1,5) # Obtain 1 to 5-step predictions
# meanForecast meanError standardDeviation
#The following command fits an ARCH(1) model with Student-t dist.
m2=garchFit(intc~garch(3,0),data=at,trace=F,cond.dist="std")
summary(m2) # Output shortened.
#The following command fits an ARCH(1) model with skew Student-t dist.
# m3=garchFit(intc~garch(1,0),data=intc,cond.dist="sstd",trace=F)
# summary(m3)
# The following command fits a GARCH(1,1) model
m4=garchFit(intc~garch(1,1),data=at,trace=F)
summary(m4) # output edited.
#Next, fit an ARMA(1,0)+GARCH(1,1) model with Gaussian noises.
m5=garchFit(intc~arma(1,0)+garch(1,1),data=da,trace=F)
summary(m5)
stresi=residuals(m5,standardize=T)
plot(stresi,xlab=" ",ylab=" ",main="Time plot of daily log returns for IBM stock",type="l",col="red",ylim=c(-15,15))
Box.test(stresi,10,type="Ljung")
predict(m5, n.ahead = 10, trace = FALSE, mse = c("cond","uncond"),
plot=TRUE, nx=NULL, crit_val=NULL, conf=NULL)
source('C:/ling/teaching/teaching/MSBD5006MSDM5053/Lecture-7/R/ARCH-intel.R')
rm(list = ls())
## remove (almost) everything in the working environment.
setwd("C:/ling/teaching/teaching/MSBD5006MSDM5053/Lecture-8/R")  #set my working directory
data=read.csv("d-IBM.csv",header=T)[,7]
da=rev(data)
ibm=diff(log(da))*100
plot(ibm,xlab=" ",ylab=" ",main="Time plot of daily log returns for IBM stock",type="l",col="red",ylim=c(-28,15))
Box.test(ibm,10,type="Ljung")
library(fGarch)
m=garchFit(ibm~arma(0,0)+garch(1,1),data=ibm,trace=F)
summary(m)
#Obtain standardized residuals.
stresi=residuals(m,standardize=T)
plot(stresi,xlab=" ",ylab=" ",main="Time plot of daily log returns for IBM stock",type="l",col="red",ylim=c(-15,15))
Box.test(stresi,10,type="Ljung")
Box.test(stresi,20,type="Ljung")
Box.test(stresi^2,10,type="Ljung")
Box.test(stresi^2,20,type="Ljung")
#The unconditional mean of the model: 0.061196
#sample mean: 0.0378514
mean(ibm)
#indicating that the model might be misspecified
predict(m, n.ahead = 10, trace = FALSE, mse = c("cond","uncond"),
plot=TRUE, nx=NULL, crit_val=NULL, conf=NULL)
predict(m, n.ahead = 100, trace = FALSE, mse = c("cond","uncond"),
plot=TRUE, nx=NULL, crit_val=NULL, conf=NULL)
m2=garchFit(~garch(1,1),data=sp5,trace=F)
summary(m2)
# Below, fit a GARCH(1,1) model with Student-t distribution.
#m2=garchFit(~garch(1,1),data=sp5,trace=F,cond.dist="std")
#Obtain standardized residuals.
stresi=residuals(m2,standardize=T)
plot(stresi,type="l")
Box.test(stresi,10,type="Ljung")
Box.test(stresi^2,10,type="Ljung")
predict(m2, n.ahead = 10, trace = FALSE, mse = c("cond","uncond"),
plot=TRUE, nx=NULL, crit_val=NULL, conf=NULL)
rm(list = ls())
## remove (almost) everything in the working environment.
#textbook page123
setwd("C:/ling/teaching/teaching/MSBD5006MSDM5053/Lecture-7/R")  #set my working directory
#########Example3.3 page134
#library(fGarch)
sp5=scan(file="sp500.txt") # Load data
plot(sp5,type="l")
acf(sp5,20,main="",col="red",ylim=c(-1,1))
pacf(sp5,20,main="",col="red",ylim=c(-1,1))
Box.test(sp5,lag=12,type="Ljung")
acf(sp5^2,20,main="",col="red",ylim=c(-1,1))
pacf(sp5^2,20,main="",col="red",ylim=c(-1,1))
Box.test(sp5^2,lag=12,type="Ljung")
# Fit an MA(3)+GARCH(1,1) model.
m1=garchFit(~arma(0,3)+garch(1,1),data=sp5,trace=F)
summary(m1)
predict(m1, n.ahead = 10, trace = FALSE, mse = c("cond","uncond"),
plot=TRUE, nx=NULL, crit_val=NULL, conf=NULL)
# Below, fit an AR(3)+GARCH(1,1) model.
m1=garchFit(~arma(3,0)+garch(1,1),data=sp5,trace=F)
summary(m1)
m2=garchFit(~garch(1,1),data=sp5,trace=F)
summary(m2)
# Below, fit a GARCH(1,1) model with Student-t distribution.
#m2=garchFit(~garch(1,1),data=sp5,trace=F,cond.dist="std")
#Obtain standardized residuals.
stresi=residuals(m2,standardize=T)
plot(stresi,type="l")
Box.test(stresi,10,type="Ljung")
Box.test(stresi^2,10,type="Ljung")
predict(m2, n.ahead = 10, trace = FALSE, mse = c("cond","uncond"),
plot=TRUE, nx=NULL, crit_val=NULL, conf=NULL)
rm(list = ls())
## remove (almost) everything in the working environment.
setwd("C:/ling/teaching/teaching/MSBD5006MSDM5053/Lecture-8/R")  #set my working directory
data=read.csv("d-IBM.csv",header=T)[,7]
da=rev(data)
ibm=diff(log(da))*100
plot(ibm,xlab=" ",ylab=" ",main="Time plot of daily log returns for IBM stock",type="l",col="red",ylim=c(-28,15))
#employ the gjrGARCH/iGARCH/eGARCH model
library(rugarch)
spec1=ugarchspec(variance.model=list(model="gjrGARCH"),
mean.model=list(armaOrder=c(0,0),include.mean = FALSE) )
mm=ugarchfit(spec=spec1,data=ibm)
mm  ### see output
#plot(mm)
res=residuals(mm,standardize=T)
Box.test(res,10,type="Ljung")#p-value = 0.9611
Box.test(res,20,type="Ljung")#p-value = 0.3925
Box.test(res^2,10,type="Ljung")#p-value = 0.01082
predict(mm, n.ahead = 10, trace = FALSE, mse = c("cond","uncond"),
plot=TRUE, nx=NULL, crit_val=NULL, conf=NULL)
rm(list = ls())
## remove (almost) everything in the working environment.
setwd("C:/ling/teaching/teaching/MSBD5006MSDM5053/Lecture-7/data/")  #set my working directory
data=read.csv("HSI-06-09.csv",header=T)[,7]
#da=rev(data)
length(data)#772
plot(data,xlab=" ",ylab=" ",main="Time plot of daily log returns",type="l",col="red",ylim=c(0,35000))
ddata=diff(log(data))*100
plot(ddata,xlab=" ",ylab=" ",main="Time plot of daily log returns",type="l",col="red",ylim=c(-20,15))
#employ the gjrGARCH/iGARCH/eGARCH model
library(rugarch)
spec1=ugarchspec(variance.model=list(model="eGARCH"),
mean.model=list(armaOrder=c(0,0),include.mean = FALSE) )
mm=ugarchfit(spec=spec1,data=ddata)
mm  ### see output
#in SAS
leverage=-0.09377/0.209714
leverage
#plot(mm)
res=residuals(mm,standardize=T)
Box.test(res,10,type="Ljung")#p-value = 0.9611
Box.test(res,20,type="Ljung")#p-value = 0.3925
Box.test(res^2,10,type="Ljung")#p-value = 0.01082
data=read.csv("Dow.csv",header=T)[,7]
#da=rev(data)
length(data)#20172
length1=20172-772
length1
data1=data[19400:20172]
plot(data1,xlab=" ",ylab=" ",main="Time plot of daily log returns",type="l",col="red",ylim=c(0,18000))
ddata=diff(log(data1))*100
plot(ddata,xlab=" ",ylab=" ",main="Time plot of daily log returns",type="l",col="red",ylim=c(-20,15))
library(rugarch)
spec1=ugarchspec(variance.model=list(model="eGARCH"),
mean.model=list(armaOrder=c(0,0),include.mean = FALSE) )
mm=ugarchfit(spec=spec1,data=ddata)
mm  ### see output
#in SAS
leverage=-0.166607/0.127943
leverage
#plot(mm)
res=residuals(mm,standardize=T)
Box.test(res,10,type="Ljung")#p-value = 0.9611
Box.test(res,20,type="Ljung")#p-value = 0.3925
Box.test(res^2,10,type="Ljung")#p-value = 0.01082
####################################################################################
data=read.csv("N225-84-09.csv",header=T)[,7]
#da=rev(data)
plot(data,xlab=" ",ylab=" ",main="Time plot of daily log returns",type="l",col="red",ylim=c(0,40000))
length(data)#6174
length1=6174-772
length1
data1=data[5402:6174]
ddata=diff(log(data1))*100
plot(ddata,xlab=" ",ylab=" ",main="Time plot of daily log returns",type="l",col="red",ylim=c(-20,15))
library(rugarch)
spec1=ugarchspec(variance.model=list(model="eGARCH"),
mean.model=list(armaOrder=c(0,0),include.mean = FALSE) )
mm=ugarchfit(spec=spec1,data=ddata)
mm  ### see output
#in SAS
leverage=-0.159876/0.078616
leverage
#plot(mm)
Box.test(res,10,type="Ljung")#p-value = 0.9611
Box.test(res,20,type="Ljung")#p-value = 0.3925
Box.test(res^2,10,type="Ljung")#p-value = 0.01082
#############################################################
data=read.csv("HSBC.csv",header=T)[,7]
#da=rev(data)
plot(data,xlab=" ",ylab=" ",main="Time plot of daily log returns",type="l",col="red",ylim=c(0,160))
length(data)1573
length1=1573-772
length1
data1=data[801:1573]
ddata=diff(log(data1))*100
plot(ddata,xlab=" ",ylab=" ",main="Time plot of daily log returns",type="l",col="red",ylim=c(-20,15))
#employ the gjrGARCH/iGARCH/eGARCH model
library(rugarch)
spec1=ugarchspec(variance.model=list(model="eGARCH"),
mean.model=list(armaOrder=c(0,0),include.mean = FALSE) )
mm=ugarchfit(spec=spec1,data=ddata)
mm  ### see output
#in SAS
leverage=-0.128551/0.258192
leverage
#plot(mm)
res=residuals(mm,standardize=T)
rm(list = ls())
## remove (almost) everything in the working environment.
setwd("C:/ling/teaching/teaching/MSBD5006MSDM5053/Lecture-8/R")  #set my working directory
data=read.csv("d-IBM.csv",header=T)[,7]
da=rev(data)
ibm=diff(log(da))*100
plot(ibm,xlab=" ",ylab=" ",main="Time plot of daily log returns for IBM stock",type="l",col="red",ylim=c(-28,15))
Box.test(ibm,10,type="Ljung")
Box.test(ibm^2,10,type="Ljung")
rm(list = ls())
## remove (almost) everything in the working environment.
setwd("C:/ling/teaching/teaching/MSBD5006MSDM5053/Lecture-8/R")  #set my working directory
data=read.csv("d-IBM.csv",header=T)[,7]
da=rev(data)
ibm=diff(log(da))*100
plot(ibm,xlab=" ",ylab=" ",main="Time plot of daily log returns for IBM stock",type="l",col="red",ylim=c(-28,15))
Box.test(ibm,10,type="Ljung")
Box.test(ibm^2,10,type="Ljung")
library(fGarch)
m=garchFit(ibm~arma(0,0)+garch(1,1),data=ibm,trace=F)
summary(m)
#Obtain standardized residuals.
stresi=residuals(m,standardize=T)
plot(stresi,xlab=" ",ylab=" ",main="Time plot of daily residual for IBM stock",type="l",col="red",ylim=c(-15,15))
Box.test(stresi,10,type="Ljung")
Box.test(stresi,20,type="Ljung")
Box.test(stresi^2,10,type="Ljung")
Box.test(stresi^2,20,type="Ljung")
#The unconditional mean of the model: 0.061196
#sample mean: 0.0378514
mean(ibm)
#indicating that the model might be misspecified
predict(m, n.ahead = 100, trace = FALSE, mse = c("cond","uncond"),
plot=TRUE, nx=NULL, crit_val=NULL, conf=NULL)
library(rugarch)
spec1=ugarchspec(variance.model=list(model="iGARCH"),
mean.model=list(armaOrder=c(0,0),include.mean = TRUE) )
mm=ugarchfit(spec=spec1,data=ibm)
mm  ### see output
#plot(mm)
res=residuals(mm,standardize=T)
Box.test(res,10,type="Ljung")#p-value = 0.9611
Box.test(res,20,type="Ljung")#p-value = 0.3925
Box.test(res^2,10,type="Ljung")#p-value = 0.01082
library(rugarch)
spec1=ugarchspec(variance.model=list(model="eGARCH"),
mean.model=list(armaOrder=c(0,0),include.mean = TRUE) )
mm=ugarchfit(spec=spec1,data=ibm)
mm  ### see output
#plot(mm)
res=residuals(mm,standardize=T)
Box.test(res,10,type="Ljung")#p-value = 0.9611
Box.test(res,20,type="Ljung")#p-value = 0.3925
Box.test(res^2,10,type="Ljung")#p-value = 0.01082
rm(list = ls())
## remove (almost) everything in the working environment.
setwd("C:/ling/teaching/teaching/MSBD5006MSDM5053/Lecture-8/R")  #set my working directory
data=read.csv("d-IBM.csv",header=T)[,7]
da=rev(data)
ibm=diff(log(da))*100
plot(ibm,xlab=" ",ylab=" ",main="Time plot of daily log returns for IBM stock",type="l",col="red",ylim=c(-28,15))
Box.test(ibm,10,type="Ljung")
Box.test(ibm^2,10,type="Ljung")
library(fGarch)
m=garchFit(ibm~arma(0,0)+garch(1,1),data=ibm,trace=F)
summary(m)
#Obtain standardized residuals.
stresi=residuals(m,standardize=T)
plot(stresi,xlab=" ",ylab=" ",main="Time plot of daily residual for IBM stock",type="l",col="red",ylim=c(-15,15))
Box.test(stresi,10,type="Ljung")
Box.test(stresi,20,type="Ljung")
Box.test(stresi^2,10,type="Ljung")
Box.test(stresi^2,20,type="Ljung")
#The unconditional mean of the model: 0.061196
#sample mean: 0.0378514
mean(ibm)
#indicating that the model might be misspecified
predict(m, n.ahead = 100, trace = FALSE, mse = c("cond","uncond"),
plot=TRUE, nx=NULL, crit_val=NULL, conf=NULL)
####################################################################
library(rugarch)
spec1=ugarchspec(variance.model=list(model="iGARCH"),
mean.model=list(armaOrder=c(0,0),include.mean = TRUE) )
mm=ugarchfit(spec=spec1,data=ibm)
mm  ### see output
#plot(mm)
res=residuals(mm,standardize=T)
Box.test(res,10,type="Ljung")#p-value = 0.9611
Box.test(res,20,type="Ljung")#p-value = 0.3925
Box.test(res^2,10,type="Ljung")#p-value = 0.01082
rm(list = ls())
## remove (almost) everything in the working environment.
setwd("C:/ling/teaching/teaching/MSBD5006MSDM5053/Lecture-8/SAS")  #set my working directory
data=read.csv("zhu_data.csv",header=T)[,2]
length(data) #709
plot(data,xlab=" ",ylab=" ",main="Time plot of daily log returns for Oil Price",type="l",col="red",ylim=c(0,150))
oil0=diff(log(data))*100
length(oil0) #708
oil=oil0[1:704]
length(oil) #708
plot(oil,xlab=" ",ylab=" ",main="Time plot of daily log returns for Oil Price",type="l",col="red",ylim=c(-28,25))
Box.test(oil,10,type="Ljung")
acf(oil,20,main="",col="red",ylim=c(-0.2,1))
pacf(oil,20,main="",col="red",ylim=c(-0.2,1))
m3=arima(oil,order=c(4,0,0))
m3
Box.test(m3$residuals,lag=12,type="Ljung")
pv=1-pchisq(25.605,8)
pv
m4=arima(oil,order=c(0,0,8))
m4
Box.test(m4$residuals,lag=12,type="Ljung")
pv=1-pchisq(5.2298,4)
pv
m5=arima(oil,order=c(0,0,8), ,fixed=c(NA,NA,NA,0,0,0,0,NA,0))
m5
Box.test(m5$residuals,lag=12,type="Ljung")
pv=1-pchisq(9.6047,8)
pv
fore=predict(m5,4)
fore
U=append(oil[704],fore$pred+1.96*fore$se)
L=append(oil[704],fore$pred-1.96*fore$se)
U
L
plot(1:13,oil0[696:708],ylim=c(-28,25),type="o",ylab="",xlab="",main="Forecasting")
lines(9:13,append(oil[704],fore$pred),type="o",col="red")
lines(9:13, U,type="l",col="blue")
lines(9:13, L,type="l",col="blue")
#points(temp.date[2:7],p,type="o")
legend(x="topleft",c("True returns","prediction"),lty=c(1,1),pch=c(1,1),col=c("black","red"))
Box.test(m5$residuals^2,10,type="Ljung")
Box.test(m5$residuals^2,12,type="Ljung")
Box.test(m5$residuals^2,18,type="Ljung")
library(fGarch)
m6=garchFit(oil~arma(0,8)+garch(1,1),data=oil,trace=F)
summary(m6)
#Obtain standardized residuals.
stresi=residuals(m6,standardize=T)
plot(stresi,xlab=" ",ylab=" ",main="Time plot of daily residual for oil",type="l",col="red",ylim=c(-15,15))
Box.test(stresi,10,type="Ljung")
Box.test(stresi,20,type="Ljung")
Box.test(stresi^2,10,type="Ljung")
Box.test(stresi^2,20,type="Ljung")
fore=predict(m6, n.ahead = 4, trace = FALSE, mse = c("cond","uncond"),
plot=TRUE, nx=NULL, crit_val=NULL, conf=NULL)
fore
L1=append(oil[704],fore$lowerInterval)
L1
U1=append(oil[704],fore$upperInterval)
U1
plot(1:13,oil0[696:708],ylim=c(-28,25),type="o",ylab="",xlab="",main="Forecasting")
lines(9:13,append(oil[704],fore$meanForecast),type="o",col="red")
lines(9:13, U1,type="l",col="blue")
lines(9:13, L1,type="l",col="blue")
#points(temp.date[2:7],p,type="o")
legend(x="topleft",c("True returns","prediction"),lty=c(1,1),pch=c(1,1),col=c("black","red"))
####################################################################
library(rugarch)
spec1=ugarchspec(variance.model=list(model="iGARCH"),
mean.model=list(armaOrder=c(0,8),include.mean = TRUE) )
mm=ugarchfit(spec=spec1,data=oil)
mm  ### see output
#plot(mm)
res=residuals(mm,standardize=T)
Box.test(res,10,type="Ljung")#p-value = 0.9611
Box.test(res,20,type="Ljung")#p-value = 0.3925
Box.test(res^2,10,type="Ljung")#p-value = 0.01082
#predict(mm, n.ahead = 10, trace = FALSE, mse = c("cond","uncond"),
#        plot=TRUE, nx=NULL, crit_val=NULL, conf=NULL)
